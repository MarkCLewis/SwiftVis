/* Generated by Together */

package edu.swri.swiftvis.plot.util;
import java.awt.Graphics2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.Color;

import edu.swri.swiftvis.plot.PlotTransform;

/**
* This utility class has methods in it that can be useful for different plotting
* routines.  This way people don't have to duplicate code for getting things to
* draw.  These methods also try to get around some of the limitations of Java2D
* like the fact that Basic stroke does not go below a certain size.
**/
public class PlottingHelper {
    public static void drawLine(Graphics2D g,PlotTransform trans,double x1,double y1,double x2,double y2) {
        Point2D p1=trans.transform(x1,y1);
        Point2D p2=trans.transform(x2,y2);
        g.draw(new Line2D.Double(p1,p2));
    }

    public static void fillQuadArea(Graphics2D g,PlotTransform trans,double x1,double y1,double x2,double y2,
        double x3,double y3,double x4,double y4) {
		GeneralPath path=new GeneralPath();
        Point2D p=trans.transform(x1,y1);
		path.moveTo((float)p.getX(),(float)p.getY());
        p=trans.transform(x2,y2);
        path.lineTo((float)p.getX(),(float)p.getY());
        p=trans.transform(x3,y3);
        path.lineTo((float)p.getX(),(float)p.getY());
        p=trans.transform(x4,y4);
        path.lineTo((float)p.getX(),(float)p.getY());
        p=trans.transform(x1,y1);
        path.lineTo((float)p.getX(),(float)p.getY());
		g.fill(path);
    }

    public static Color mixColors(Color c1,Color c2,Color c3) {
		float[] t1={0.0f,0.0f,0.0f},t2={0.0f,0.0f,0.0f},t3={0.0f,0.0f,0.0f};
        if(c1!=null) {
            c1.getRGBColorComponents(t1);
        }
        if(c2!=null) {
            c2.getRGBColorComponents(t2);
        }
        if(c3!=null) {
            c3.getRGBColorComponents(t3);
        }
        float red=t1[0]+t2[0]+t3[0];
        float green=t1[1]+t2[1]+t3[1];
        float blue=t1[2]+t2[2]+t3[2];
        if(red>1.0f) red=1.0f;
        if(green>1.0f) green=1.0f;
        if(blue>1.0f) blue=1.0f;
        return new Color(red,green,blue);
    }
}
